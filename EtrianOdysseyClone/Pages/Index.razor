@using EtrianOdysseyClone.Pages.Overworld
@using EtrianOdysseyClone.Data
@inject GameSession SessionInfo
@page "/"
<div class="bg-gray-200 h-screen">
    <div class="flex justify-center">
        <div class="bg-white h-screen">
            @SelectComponent()
            <button class="rounded-md bg-blue-400 p-4 m-10 border-blue-900 shadow-sm" @onclick="SwitchComponent">Reset</button>
        </div>
    </div>
</div>


@code {
    protected override void OnInitialized()
    {
        SessionInfo.PropertyChanged += (sender, args) => StateHasChanged();
    }

    public void Dispose()
    {
        SessionInfo.PropertyChanged -= (sender, args) => StateHasChanged();
    }

    private void SwitchComponent()
    {
        SessionInfo.CurrentLocation = OverworldLocation.Town;
    }

    private RenderFragment SelectComponent()
    {
        RenderFragment componentToDisplay = null;

        switch (SessionInfo.CurrentLocation)
        {
            case OverworldLocation.Bar:
                componentToDisplay = RenderComponent(componentToDisplay, typeof(Bar));
                break;

            case OverworldLocation.Guild:
                componentToDisplay = RenderComponent(componentToDisplay, typeof(Guild));
                break;

            case OverworldLocation.Dungeon:
                componentToDisplay = RenderComponent(componentToDisplay, typeof(Dungeon));
                break;

            case OverworldLocation.Inn:
                componentToDisplay = RenderComponent(componentToDisplay, typeof(Inn));
                break;

            case OverworldLocation.Shop:
                componentToDisplay = RenderComponent(componentToDisplay, typeof(Shop));
                break;


            case OverworldLocation.Town:
                componentToDisplay = RenderComponent(componentToDisplay, typeof(Town));
                break;
        }

        return componentToDisplay;
    }

    private RenderFragment RenderComponent(RenderFragment componentToDisplay, Type componentType)
    {
        componentToDisplay = b =>
        {
            b.OpenComponent(1, componentType);
            b.CloseComponent();
        };
        return componentToDisplay;
    }
}
