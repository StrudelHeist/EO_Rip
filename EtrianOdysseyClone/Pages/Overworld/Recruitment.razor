@page "/Recruitment"

@using EtrianOdysseyClone.Pages.Tools
@using EtrianOdysseyClone.Models
@using EtrianOdysseyClone.Data
@using EtrianOdysseyClone.Data.Jobs
@using EtrianOdysseyClone.Data.Config;
@using Microsoft.Extensions.Options;
@inject GameSession SessionInfo
@inject IOptionsSnapshot<CharacterConfigSection> CharacterConfig

<img src="/Images/GuildDay.stex.png" class="object-cover sticky top-0 w-full" asp-append-version="true" />,..
<div class="absolute inset-y-0 flex flex-row">
    <label class="text-white">Select Adventures Class</label>
    <div class="left-0 relative flex justify-center">
        <PrimaryFloatingMenu MenuOptions="_jobSelectOptions"></PrimaryFloatingMenu>
    </div>
    @if (_requestInput)
    {
        <div class="flex flex-col justify-evenly mr-3">
            <input @bind-value="_nameInput" class="text-base h-10" @onclick="() => OnConfirm(_nameInput)" />
            <button class="btn btn-blue bg-blue-300 rounded-lg px-20 py-2">Confirm</button>
        </div>
    }
</div>

@code {
    private List<ButtonProperties> _jobSelectOptions;
    private Job selectedJob;

    private List<ButtonProperties> _characterSelectOptions;
    private CharacterConfig selectedCharacter;

    private bool _requestInput;
    private string _nameInput;

    protected override void OnInitialized()
    {
        _requestInput = false;

        _jobSelectOptions = new List<ButtonProperties>();
        _characterSelectOptions = new List<ButtonProperties>();

        foreach (Job job in Enum.GetValues(typeof(Job)))
        {
            _jobSelectOptions.Add(new ButtonProperties()
            {
                ButtonName = job.ToString(),
                ButtonAction = () => OnJobSelect(job),
                ButtonDisabled = false
            });
        }
    }

    #region EventHandlers
    private void GotoLocation(OverworldLocation location)
    {
        SessionInfo.CurrentLocation = location;
    }

    private void OnConfirm(string name)
    {
        //new PartyMember();
        //SessionInfo.Party.AddPartyMember();
    }

    private void OnJobSelect(Job newJob)
    {
        selectedJob = newJob;
        _requestInput = true;
        StateHasChanged();
    }

    private void OnCharacterSelect(CharacterConfig character)
    {
        selectedCharacter = character;
    }
    #endregion

    #region HelperFunctions
    private void DisplayCharacterOptions(Job job)
    {
        foreach (var character in CharacterConfig.Value.Characters)
        {
            if (character.Job == Enum.GetName<Job>(job))
            {
                _characterSelectOptions.Add(new ButtonProperties()
                {
                    ButtonName = character.Name,
                    ButtonAction = () => OnCharacterSelect(character),
                    ButtonDisabled = false
                });
            }
        }
    }
    #endregion

}
